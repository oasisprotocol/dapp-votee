/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers'
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers'
import type { NonPayableOverrides } from '../../common'
import type { NativeBalanceACL, NativeBalanceACLInterface } from '../../contracts/NativeBalanceACL'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'canCreatePoll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'in_pm',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'in_proposalId',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'in_who',
        type: 'address',
      },
    ],
    name: 'canManagePoll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'in_pm',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'in_proposalId',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'who',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'canVoteOnPoll',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'in_proposalId',
        type: 'bytes32',
      },
    ],
    name: 'onPollClosed',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'in_proposalId',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'in_creator',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'in_data',
        type: 'bytes',
      },
    ],
    name: 'onPollCreated',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
] as const

const _bytecode =
  '0x6080806040523461001657610442908161001c8239f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a7146102835750816356d15dc81461023a578382638d74950e146101e857508163a4b4bbda14610178578163c60e204714610099575063ff6fef7d1461006957600080fd5b346100955780600319360112610095576020906100846102d9565b5061008d61030a565b505160018152f35b5080fd5b838334610095576060366003190112610095576100b461030a565b67ffffffffffffffff9160443583811161017457906100d96020939236908801610320565b9080949181010312610174576100f03387356103ae565b8086526020869052818620546001600160a01b0393906101129085161561034e565b82519586840190811187821017610161576001969798509084918452168652602086019335845286528560205285209351166bffffffffffffffffffffffff60a01b8454161783555191015580f35b634e487b7160e01b885260418952602488fd5b8480fd5b9050346101e45760803660031901126101e4576101936102d9565b61019b6102f4565b916064359167ffffffffffffffff83116101e0576101c16101cb92600194369101610320565b5050602435610380565b91319101541015610095576020905160018152f35b8580fd5b8280fd5b809184346102365760203660031901126102365761020a6001923390356103ae565b80845283602052610226838060a01b038386205416151561034e565b8352826020528220828155015580f35b5050fd5b505034610095576060366003190112610095576020906102586102d9565b906102786102646102f4565b926001600160a01b03918291602435610380565b541691519216148152f35b8491346101e45760203660031901126101e4573563ffffffff60e01b81168091036101e4576020925063b91f535b60e01b81149081156102c5575b5015158152f35b60016290108360e01b0319149050836102be565b600435906001600160a01b03821682036102ef57565b600080fd5b604435906001600160a01b03821682036102ef57565b602435906001600160a01b03821682036102ef57565b9181601f840112156102ef5782359167ffffffffffffffff83116102ef57602083818601950101116102ef57565b1561035557565b60405162461bcd60e51b81526020600482015260036024820152620d0c0d60ea1b6044820152606490fd5b9061038a916103ae565b600052600060205260406000206103ab60018060a01b03825416151561034e565b90565b9060405190602082019283526bffffffffffffffffffffffff199060601b166040820152603481526060810181811067ffffffffffffffff8211176103f65760405251902090565b634e487b7160e01b600052604160045260246000fdfea264697066735822122037a1712856187e3c392752f674683b1b50904418339c9ba6f8e4d84fbd1cd75864736f6c63430008170033'

type NativeBalanceACLConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: NativeBalanceACLConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class NativeBalanceACL__factory extends ContractFactory {
  constructor(...args: NativeBalanceACLConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {})
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NativeBalanceACL & {
        deploymentTransaction(): ContractTransactionResponse
      }
    >
  }
  override connect(runner: ContractRunner | null): NativeBalanceACL__factory {
    return super.connect(runner) as NativeBalanceACL__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): NativeBalanceACLInterface {
    return new Interface(_abi) as NativeBalanceACLInterface
  }
  static connect(address: string, runner?: ContractRunner | null): NativeBalanceACL {
    return new Contract(address, _abi, runner) as unknown as NativeBalanceACL
  }
}
